/* Enter a unique ExecutionPlan */
@Plan:name('RiskScoreCalculator-PersistDataForRiskScore')

/* Enter a unique description for ExecutionPlan */
 @Plan:description('Persist login information required to calculate risk')

/* define streams/tables and write queries here ... */

@Import('org.wso2.is.analytics.stream.ProcessedOverallAuthentication:1.0.0')
define stream ProcessedOverallAuthentication (meta_tenantId int, contextId string, eventId string, eventType string, authenticationSuccess bool, username string, localUsername string,
											  userStoreDomain string, tenantDomain string, remoteIp string, region string, inboundAuthType string, serviceProvider string, rememberMeEnabled bool,
											  forceAuthEnabled bool, passiveAuthEnabled bool, rolesCommaSeparated string, authenticationStep string, identityProvider string, authStepSuccess bool,
											  stepAuthenticator string, isFirstLogin bool, identityProviderType string, _timestamp long);

@from(eventtable = 'analytics.table' , table.name = 'ORG_WSO2_IS_ANALYTICS_STREAM_PROCESSEDAUTHENTICATIONFORRISKSCORE')
@Index('meta_tenantId','contextId','eventId','authenticationSuccess','username','userStoreDomain','tenantDomain','remoteIp','region','timestamp')
define table ProcessedAuthenticationForRiskScoreTable (meta_tenantId int, contextId string, eventId string,
authenticationSuccess bool,username string, userStoreDomain string, tenantDomain string, remoteIp string, region string, timestamp long);

from ProcessedOverallAuthentication[eventType == "overall"]
select meta_tenantId, contextId, eventId, authenticationSuccess, username, userStoreDomain, tenantDomain, remoteIp, region, _timestamp as timestamp
insert into ProcessedAuthenticationForRiskScoreTable;
